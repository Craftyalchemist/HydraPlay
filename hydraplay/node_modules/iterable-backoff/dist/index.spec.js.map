{"version":3,"sources":["../src/index.spec.js"],"names":["testIterable","iterable","values","iterator","next","TypeError","value","cursor","done","Error","expect","toBe","describe","it"],"mappings":";;AAEA;;AAOA;;AAEA,MAAMA,eAAe,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACzC,MAAIC,QAAJ;AACA,MACEF,YAAY,IAAZ,IACA,OAAOA,0BAAP,KAAoC,UADpC,IAEA,OAAO,CAACE,WAAWF,4BAAZ,EAAwCG,IAA/C,KAAwD,UAH1D,EAIE;AACA,UAAM,IAAIC,SAAJ,CAAc,iBAAd,CAAN;AACD;;AAED,uBAAoBH,MAApB,kHAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAAjBI,KAAiB;;AAC1B,UAAMC,SAASJ,SAASC,IAAT,EAAf;AACA,QAAIG,OAAOC,IAAX,EAAiB;AACf,YAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;AACDC,WAAOH,OAAOD,KAAd,EAAqBK,IAArB,CAA0BL,KAA1B;AACD;AACF,CAjBD;;AAmBA;;AA9BA;;AAgCAM,SAAS,eAAT,EAA0B,MAAM;AAC9BC,KAAG,qBAAH,EAA0B,MAAM;AAC9Bb,iBACE,oBADF,EAEE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,IAAtC,CAFF;AAID,GALD;AAMD,CAPD;;AASAY,SAAS,aAAT,EAAwB,MAAM;AAC5BC,KAAG,qBAAH,EAA0B,MAAM;AAC9Bb,iBACE,kBADF,EAEE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,CAFF;AAID,GALD;AAMD,CAPD;;AASAY,SAAS,SAAT,EAAoB,MAAM;AACxBC,KAAG,qBAAH,EAA0B,MAAM;AAC9Bb,iBACE,cADF,EAEE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,GAAnC,CAFF;AAID,GALD;AAMD,CAPD","file":"index.spec.js","sourcesContent":["/* eslint-env jest */\n\nimport {\n  exponential,\n  fibonacci,\n  power,\n  symbolIterator\n} from './'\n\n// ===================================================================\n\nconst testIterable = (iterable, values) => {\n  let iterator\n  if (\n    iterable == null ||\n    typeof iterable[symbolIterator] !== 'function' ||\n    typeof (iterator = iterable[symbolIterator]()).next !== 'function'\n  ) {\n    throw new TypeError('is not iterable')\n  }\n\n  for (const value of values) {\n    const cursor = iterator.next()\n    if (cursor.done) {\n      throw new Error('unexpected end of iterable')\n    }\n    expect(cursor.value).toBe(value)\n  }\n}\n\n// ===================================================================\n\ndescribe('exponential()', () => {\n  it('returns an iterable', () => {\n    testIterable(\n      exponential(),\n      [ 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 ]\n    )\n  })\n})\n\ndescribe('fibonacci()', () => {\n  it('returns an iterable', () => {\n    testIterable(\n      fibonacci(),\n      [ 1, 1, 2, 3, 5, 8, 13, 21, 34, 55 ]\n    )\n  })\n})\n\ndescribe('power()', () => {\n  it('returns an iterable', () => {\n    testIterable(\n      power(),\n      [ 1, 4, 9, 16, 25, 36, 49, 64, 81, 100 ]\n    )\n  })\n})\n"]}