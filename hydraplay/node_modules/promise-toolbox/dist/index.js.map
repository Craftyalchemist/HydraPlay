{"version":3,"sources":["../src/index.js"],"names":["all","asCallback","catchPlus","delay","disposer","using","ignoreErrors","join","lastly","reflect","settle","some","tap","timeout","unpromisify","Promise","reject","resolve","Error","_endsWith","str","suffix","pos","length","indexOf","_isArray","Array","isArray","value","_isLength","Infinity","Math","floor","_isArrayLike","_iteratorSymbol","Symbol","iterator","_isIterable","_once","result","fn","apply","arguments","_noop","_forArray","array","iteratee","i","_forIn","object","key","_forIterable","iterable","current","next","done","hasOwnProperty","Object","prototype","_forOwn","call","_forEach","collection","_map","item","isPromise","then","_makeAsyncIterator","promises","cb","mainPromise","promise","_wrap","wrapCall","arg","thisArg","error","wrapApply","args","_all","mapFn","count","onFulfillment0","tmp","onFulfillment","onRejection","reason","nodeify","Cancel","message","defineProperty","enumerable","_cancelTokenTag","_toStringTagSymbol","toStringTag","CancelToken","cancel","token","cancel_","tokens","_executor","undefined","addHandler","executor","_handlers","_promise","_reason","_resolve","handlers","defer","wait","onSettle","n","_","race","c","handler","requested","TypeError","push","cancelable","target","name","descriptor","cancelableWrapper","isCancelToken","source","cancellable","_isProgrammerError","ReferenceError","SyntaxError","_matchError","predicate","predicates","resolve_","reject_","ms","setTimeout","Resource","d","p","nResources","resources","spread","dispose","leftToProcess","onFailure","resource","values","onProviderFailure_","onProviderSettle","onProviderFailure","makeAsyncIterator","asyncIterator","forArray","forEach","forIn","forIterable","forOwn","fromCallback","_ignoreErrorsCb","_makeEventAdder","$cancelToken","emitter","arrayArg","add","addEventListener","addListener","on","remove","removeEventListener","removeListener","off","eventsAndListeners","clean","event","listener","fromEvent","opts","fromEvents","successEvents","errorEvents","finally","_setFunctionNameAndLength","_defineProperties","defineProperties","f","configurable","promisify","context","_DEFAULT_PALL_MAPPER","promisifyAll","obj","mapper","newName","FN_FALSE","FN_TRUE","_reflectResolution","__proto__","isFulfilled","isPending","isRejected","isResolved","_reflectRejection","_some","errors","acceptableErrors","onResolved","onRejected","forward","TimeoutError","handle","clearTimeout","attempt","try"],"mappings":"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","file":"index.js","sourcesContent":["import { BaseError } from 'make-error'\n\n// ===================================================================\n\nif (\n  typeof Promise !== 'function' ||\n  typeof Promise.reject !== 'function' ||\n  typeof Promise.resolve !== 'function'\n) {\n  throw new Error('a standard Promise implementation is required (https://github.com/JsCommunity/promise-toolbox#usage)')\n}\n\n// ===================================================================\n\nconst _endsWith = (str, suffix, pos = str.length) => {\n  pos -= suffix.length\n  return pos >= 0 && str.indexOf(suffix, pos) === pos\n}\n\nconst _isArray = Array.isArray || (value => value instanceof Array)\n\nconst _isLength = value => (\n  typeof value === 'number' &&\n  value >= 0 && value < Infinity &&\n  Math.floor(value) === value\n)\n\nconst _isArrayLike = value => (\n  value &&\n  typeof value !== 'function' &&\n  _isLength(value.length)\n)\n\nconst _iteratorSymbol = (\n  (typeof Symbol === 'function' && Symbol.iterator) ||\n  '@@iterator'\n)\n\nconst _isIterable = value => value && typeof value[_iteratorSymbol] === 'function'\n\nconst _once = fn => {\n  let result\n  return function () {\n    if (fn !== null) {\n      result = fn.apply(this, arguments)\n      fn = null\n    }\n    return result\n  }\n}\n\nconst _noop = () => {}\n\n// -------------------------------------------------------------------\n\nconst _forArray = (array, iteratee) => {\n  const { length } = array\n  for (let i = 0; i < length; ++i) {\n    iteratee(array[i], i, array)\n  }\n}\n\nconst _forIn = (object, iteratee) => {\n  for (const key in object) {\n    iteratee(object[key], key, object)\n  }\n}\n\nconst _forIterable = (iterable, iteratee) => {\n  const iterator = iterable[Symbol.iterator]()\n\n  let current\n  while (!(current = iterator.next()).done) {\n    iteratee(current.value, null, iterable)\n  }\n}\n\nconst { hasOwnProperty } = Object.prototype\nconst _forOwn = (object, iteratee) => {\n  for (const key in object) {\n    if (hasOwnProperty.call(object, key)) {\n      iteratee(object[key], key, object)\n    }\n  }\n}\n\nconst _forEach = (collection, iteratee) => _isArray(collection)\n  ? _forArray(collection, iteratee)\n  : _isIterable(collection)\n    ? _forIterable(collection, iteratee)\n    : _isArrayLike(collection)\n      ? _forArray(collection, iteratee)\n      : _forOwn(collection, iteratee)\n\nconst _map = (collection, iteratee) => {\n  const result = _isArrayLike(collection)\n    ? new Array(collection.length)\n    : {}\n\n  // If iteratee is not a function, simply returns the new container.\n  if (iteratee) {\n    _forEach(collection, (item, key) => {\n      result[key] = iteratee(item, key, collection)\n    })\n  }\n\n  return result\n}\n\n// ===================================================================\n\nexport const isPromise = value => (\n  value != null &&\n  typeof value.then === 'function'\n)\n\n// -------------------------------------------------------------------\n\nconst _makeAsyncIterator = iterator => (promises, cb) => {\n  let mainPromise = Promise.resolve()\n\n  iterator(promises, (promise, key) => {\n    mainPromise = isPromise(promise)\n      ? mainPromise.then(() => promise.then(value => cb(value, key, promises)))\n      : mainPromise.then(() => cb(promise, key, promises))\n  })\n\n  return mainPromise\n}\n\nconst _wrap = value => isPromise(value)\n  ? value\n  : Promise.resolve(value)\n\nexport const wrapCall = (fn, arg, thisArg) => {\n  try {\n    return _wrap(fn.call(thisArg, arg))\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nexport const wrapApply = (fn, args, thisArg) => {\n  try {\n    return _wrap(fn.apply(thisArg, args))\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\n// ===================================================================\n\nconst _all = (promises, mapFn) => new Promise((resolve, reject) => {\n  // mapFn may be undefined but it's okay :)\n  let result = _map(promises, mapFn)\n\n  let count = 1\n  const onFulfillment0 = () => {\n    if (--count === 0) {\n      const tmp = result\n      result = null\n      resolve(tmp)\n    }\n  }\n\n  const onFulfillment = (value, key) => {\n    if (!result) {\n      return\n    }\n\n    result[key] = value\n    onFulfillment0()\n  }\n\n  const onRejection = reason => {\n    if (!result) {\n      return\n    }\n\n    result = null\n    reject(reason)\n  }\n\n  _forEach(mapFn ? result : promises, (promise, key) => {\n    ++count\n\n    if (isPromise(promise)) {\n      promise.then(\n        value => onFulfillment(value, key),\n        onRejection\n      )\n    } else {\n      onFulfillment(promise, key)\n    }\n  })\n  onFulfillment0()\n})\n\n// Returns a promise which resolves when all the promises in a\n// collection have resolved or rejects with the reason of the first\n// promise that rejects.\n//\n// Optionally a function can be provided to map all items in the\n// collection before waiting for completion.\n//\n// Usage: promises::all([ mapFn ])\nexport function all (mapFn) {\n  return _wrap(this).then(promises => _all(promises, mapFn))\n}\n\n// -------------------------------------------------------------------\n\n// Usage: promise::asCallback(cb)\nexport function asCallback (cb) {\n  // cb can be undefined.\n  if (cb) {\n    this.then(\n      value => cb(null, value),\n      error => cb(error)\n    ).then(null, _noop)\n  }\n\n  return this\n}\n\nexport { asCallback as nodeify }\n\n// -------------------------------------------------------------------\n\nexport class Cancel {\n  constructor (message = 'this action has been canceled') {\n    Object.defineProperty(this, 'message', {\n      enumerable: true,\n      value: message\n    })\n  }\n\n  toString () {\n    return `Cancel: ${this.message}`\n  }\n}\n\nconst _cancelTokenTag = 'CancelToken'\nconst _toStringTagSymbol = (typeof Symbol === 'function' && Symbol.toStringTag) || '@@toStringTag'\n\n// https://github.com/zenparsing/es-cancel-token\n// https://tc39.github.io/proposal-cancelable-promises/\nexport class CancelToken {\n  static isCancelToken (value) {\n    return (\n      value != null &&\n      typeof value[_toStringTagSymbol] === 'function' &&\n      value[_toStringTagSymbol]() === _cancelTokenTag\n    )\n  }\n\n  // https://github.com/zenparsing/es-cancel-token/issues/3#issuecomment-221173214\n  static source () {\n    let cancel\n    const token = new CancelToken(cancel_ => {\n      cancel = cancel_\n    })\n    return { cancel, token }\n  }\n\n  static race (tokens, _executor) {\n    return new CancelToken(cancel => {\n      _forEach(tokens, token => {\n        const { reason } = token\n        if (reason !== undefined) {\n          cancel(reason)\n          return false\n        }\n\n        token.addHandler(cancel)\n      })\n      if (_executor !== undefined) {\n        _executor(cancel)\n      }\n    })\n  }\n\n  constructor (executor) {\n    this._handlers = null\n    this._promise = null\n    this._reason = undefined\n    this._resolve = null\n\n    executor(_once(message => {\n      const reason = this._reason = message instanceof Cancel\n        ? message\n        : new Cancel(message)\n\n      const resolve = this._resolve\n      if (resolve !== null) {\n        this._resolve = null\n        resolve(reason)\n      }\n\n      const handlers = this._handlers\n      if (handlers !== null) {\n        this._handlers = null\n\n        const { promise, resolve } = defer()\n        let wait = 0\n        const onSettle = () => {\n          if (--wait === 0) {\n            return resolve()\n          }\n        }\n        for (let i = 0, n = handlers.length; i < n; ++i) {\n          try {\n            const result = handlers[i](reason)\n            if (isPromise(result)) {\n              ++wait\n              result.then(onSettle, onSettle)\n            }\n          } catch (_) {}\n        }\n        if (wait !== 0) {\n          return promise\n        }\n      }\n    }))\n  }\n\n  get promise () {\n    let promise = this._promise\n    if (promise === null) {\n      const reason = this._reason\n      promise = this._promise = reason !== undefined\n        ? Promise.resolve(reason)\n        : new Promise(resolve => {\n          this._resolve = resolve\n        })\n    }\n    return promise\n  }\n\n  get reason () {\n    return this._reason\n  }\n\n  get requested () {\n    return this._reason !== undefined\n  }\n\n  fork (executor) {\n    if (executor !== undefined) {\n      return CancelToken.race([ this ], executor)\n    }\n\n    let cancel\n    const token = CancelToken.race([ this ], c => { cancel = c })\n    return { cancel, token }\n  }\n\n  // register a handler to execute when the token is canceled\n  //\n  // handlers are all executed in parallel, the promise returned by\n  // the `cancel` function will wait for all handlers to be settled\n  addHandler (handler) {\n    let handlers = this._handlers\n    if (handlers === null) {\n      if (this.requested) {\n        throw new TypeError('cannot add a handler to an already canceled token')\n      }\n\n      handlers = this._handlers = []\n    }\n    handlers.push(handler)\n  }\n\n  throwIfRequested () {\n    const reason = this._reason\n    if (reason !== undefined) {\n      throw reason\n    }\n  }\n\n  [_toStringTagSymbol] () {\n    return _cancelTokenTag\n  }\n}\n\n// Usage:\n//\n//     @cancelable\n//     async fn (cancelToken, other, args) {\n//       if (!cancelToken.requested) {\n//         doStuff()\n//       }\n//\n//       cancelToken.throwIfRequested()\n//\n//       doSomeMoreStuff()\n//\n//       cancelToken.promise.then(() => {\n//         // Do stuff if canceled.\n//       })\n//\n//       // do other stuff.\n//     }\nexport const cancelable = (target, name, descriptor) => {\n  const fn = descriptor !== undefined\n    ? descriptor.value\n    : target\n\n  function cancelableWrapper () {\n    const { length } = arguments\n    if (length !== 0 && CancelToken.isCancelToken(arguments[0])) {\n      return fn.apply(this, arguments)\n    }\n\n    const { cancel, token } = CancelToken.source()\n    const args = new Array(length + 1)\n    args[0] = token\n    for (let i = 0; i < length; ++i) {\n      args[i + 1] = arguments[i]\n    }\n\n    const promise = fn.apply(this, args)\n    promise.cancel = cancel\n\n    return promise\n  }\n\n  if (descriptor !== undefined) {\n    descriptor.value = cancelableWrapper\n    return descriptor\n  }\n\n  return cancelableWrapper\n}\nexport { cancelable as cancellable } // alternative UK spelling\n\n// -------------------------------------------------------------------\n\nconst _isProgrammerError = reason =>\n  reason instanceof ReferenceError ||\n  reason instanceof SyntaxError ||\n  reason instanceof TypeError\n\nconst _matchError = (predicate, error) => {\n  if (typeof predicate === 'function') {\n    return (\n      predicate === Error ||\n      predicate.prototype instanceof Error\n    )\n      ? error instanceof predicate\n      : predicate(error)\n  }\n\n  if (error != null && typeof predicate === 'object') {\n    for (const key in predicate) {\n      if (\n        hasOwnProperty.call(predicate, key) &&\n        error[key] !== predicate[key]\n      ) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\n// Similar to `Promise#catch()` but:\n// - support predicates\n// - do not catch `ReferenceError`, `SyntaxError` or `TypeError`\n//   unless they match a predicate because they are usually programmer\n//   errors and should be handled separately.\nexport function catchPlus () {\n  const n = arguments.length - 1\n\n  let cb\n  if (\n    n < 0 ||\n    typeof (cb = arguments[n]) !== 'function'\n  ) {\n    return this\n  }\n\n  let predicates\n  if (n !== 0) {\n    predicates = new Array(n)\n    for (let i = 0; i < n; ++i) {\n      predicates[i] = arguments[i]\n    }\n  }\n\n  return _wrap(this).then(null, reason => {\n    if (predicates !== undefined) {\n      for (let i = 0; i < n; ++i) {\n        if (_matchError(predicates[i], reason)) {\n          return cb(reason)\n        }\n      }\n    } else if (!_isProgrammerError(reason)) {\n      return cb(reason)\n    }\n\n    // Forward error without throwing (perf).\n    return this\n  })\n}\n\n// -------------------------------------------------------------------\n\n// Discouraged but sometimes necessary way to create a promise.\nexport const defer = () => {\n  let resolve, reject\n  const promise = new Promise((resolve_, reject_) => { // eslint-disable-line promise/param-names\n    resolve = resolve_\n    reject = reject_\n  })\n\n  return {\n    promise,\n    reject,\n    resolve\n  }\n}\n\n// -------------------------------------------------------------------\n\n// Usage: promise::delay(ms)\nexport function delay (ms) {\n  return isPromise(this)\n    ? this.then(value => new Promise(resolve => {\n      setTimeout(() => resolve(value), ms)\n    }))\n    : new Promise(resolve => {\n      setTimeout(() => resolve(this), ms)\n    })\n}\n\n// -------------------------------------------------------------------\n\nfunction Resource (promise, disposer) {\n  this.d = disposer\n  this.p = promise\n}\n\n// Usage: promise::disposer(disposer)\nexport function disposer (disposer) {\n  return new Resource(this, disposer)\n}\n\n// Usage: using(disposers…, handler)\nexport function using () {\n  let nResources = arguments.length - 1\n\n  if (nResources < 1) {\n    throw new TypeError('using expects at least 2 arguments')\n  }\n\n  const handler = arguments[nResources]\n\n  let resources = arguments[0]\n  const spread = nResources > 1 || !_isArray(resources)\n  if (spread) {\n    resources = new Array(nResources)\n    for (let i = 0; i < nResources; ++i) {\n      resources[i] = arguments[i]\n    }\n  } else {\n    nResources = resources.length\n  }\n\n  const dispose = _once((fn, value) => {\n    let leftToProcess = nResources\n\n    const onSettle = () => {\n      if (--leftToProcess === 0) {\n        fn(value)\n      }\n    }\n\n    // like Bluebird, on failure to dispose a resource, throw an async error\n    const onFailure = reason => {\n      setTimeout(() => {\n        throw reason\n      }, 0)\n    }\n\n    _forArray(resources, resource => {\n      let d\n      if (resource != null && typeof (d = resource.d) === 'function') {\n        resource.p.then(\n          value => wrapCall(d, value).then(onSettle, onFailure),\n          onSettle\n        )\n\n        resource.p = resource.d = null\n      } else {\n        --leftToProcess\n      }\n    })\n  })\n\n  return new Promise((resolve, reject) => {\n    const values = new Array(nResources)\n    let leftToProcess = nResources\n\n    let onProviderFailure_ = reason => {\n      onProviderFailure_ = onProviderSettle\n      onSettle = () => dispose(reject, reason)\n\n      onProviderSettle()\n    }\n    const onProviderFailure = reason => onProviderFailure_(reason)\n\n    const onProviderSettle = () => {\n      if (--leftToProcess === 0) {\n        onSettle()\n      }\n    }\n\n    let onSettle = () =>\n      (spread ? wrapApply : wrapCall)(handler, values, this).then(\n        value => dispose(resolve, value),\n        reason => dispose(reject, reason)\n      )\n\n    _forArray(resources, (resource, i) => {\n      const p = resource instanceof Resource ? resource.p : resource\n      if (p === null) {\n        onProviderFailure(new TypeError('resource has already been disposed of'))\n        return\n      }\n\n      p.then(value => {\n        values[i] = value\n\n        onProviderSettle()\n      }, onProviderFailure)\n    })\n  })\n}\n\n// -------------------------------------------------------------------\n\nexport const makeAsyncIterator = iterator => {\n  const asyncIterator = _makeAsyncIterator(iterator)\n\n  return function (cb) {\n    return _wrap(this)\n      .then(promises => asyncIterator(promises, cb))\n      .then(_noop) // Resolves to undefined\n  }\n}\n\nexport const forArray = makeAsyncIterator(_forArray)\nexport const forEach = makeAsyncIterator(_forEach)\nexport const forIn = makeAsyncIterator(_forIn)\nexport const forIterable = makeAsyncIterator(_forIterable)\nexport const forOwn = makeAsyncIterator(_forOwn)\n\n// -------------------------------------------------------------------\n\n// Usage:\n//\n//     fromCallback(cb => fs.readFile('foo.txt', cb))\n//       .then(content => {\n//         console.log(content)\n//       })\nexport const fromCallback = fn => new Promise((resolve, reject) => {\n  fn((error, result) => error\n    ? reject(error)\n    : resolve(result)\n  )\n})\n\n// -------------------------------------------------------------------\n\nconst _ignoreErrorsCb = error => {\n  if (_isProgrammerError(error)) {\n    throw error\n  }\n}\n\nexport function ignoreErrors () {\n  if (!isPromise(this)) {\n    return this\n  }\n\n  return this.then(null, _ignoreErrorsCb)\n}\n\n// -------------------------------------------------------------------\n\nconst _makeEventAdder = ($cancelToken, emitter, arrayArg) => {\n  const add =\n    emitter.addEventListener ||\n    emitter.addListener ||\n    emitter.on\n  if (add === undefined) {\n    throw new Error('cannot register event listener')\n  }\n\n  const remove =\n    emitter.removeEventListener ||\n    emitter.removeListener ||\n    emitter.off\n\n  const eventsAndListeners = []\n\n  let clean = _noop\n  if (remove !== undefined) {\n    clean = _once(() => {\n      for (let i = 0, n = eventsAndListeners.length; i < n; i += 2) {\n        remove.call(emitter, eventsAndListeners[i], eventsAndListeners[i + 1])\n      }\n    })\n    $cancelToken.promise.then(clean)\n  }\n\n  return arrayArg\n    ? (event, cb) => {\n      function listener () {\n        clean()\n        const { length } = arguments\n        const args = new Array(length)\n        for (let i = 0; i < length; ++i) {\n          args[i] = arguments[i]\n        }\n        args.event = event\n        cb(args)\n      }\n      eventsAndListeners.push(event, listener)\n      add.call(emitter, event, listener)\n    }\n    : (event, cb) => {\n      const listener = arg => {\n        clean()\n        cb(arg)\n      }\n      eventsAndListeners.push(event, listener)\n      add.call(emitter, event, listener)\n    }\n}\n\nexport const fromEvent = cancelable(\n  ($cancelToken, emitter, event, opts = {}) =>\n    new Promise((resolve, reject) => {\n      const add = _makeEventAdder($cancelToken, emitter, opts.array)\n      add(event, resolve)\n      if (!opts.ignoreErrors) {\n        const { error = 'error' } = opts\n        if (error !== event) {\n          add(error, reject)\n        }\n      }\n    })\n)\n\nexport const fromEvents = cancelable(\n  ($cancelToken, emitter, successEvents, errorEvents = [ 'error' ]) =>\n    new Promise((resolve, reject) => {\n      const add = _makeEventAdder($cancelToken, emitter, true)\n      _forArray(successEvents, event => add(event, resolve))\n      _forArray(errorEvents, event => add(event, reject))\n    })\n)\n\n// -------------------------------------------------------------------\n\n// Usage: join(p1, ..., pn, cb) or join([p1, ..., pn], cb)\nexport function join () {\n  const n = arguments.length - 1\n  const cb = arguments[n]\n\n  let promises\n  if (n === 0) {\n    return new Promise(resolve => resolve(cb()))\n  } else if (n !== 1) {\n    promises = new Array(n)\n    for (let i = 0; i < n; ++i) {\n      promises[i] = arguments[i]\n    }\n  } else if (!_isArrayLike(promises = arguments[0])) {\n    return _wrap(promises).then(value => cb(value))\n  }\n\n  return _all(promises).then(args => cb.apply(null, args))\n}\n\n// -------------------------------------------------------------------\n\n// Ponyfill for Promise.finally(cb)\n//\n// Usage: promise::lastly(cb)\nexport function lastly (cb) {\n  return _wrap(this).then(\n    value => _wrap(cb()).then(() => this),\n    reason => _wrap(cb()).then(() => this)\n  )\n}\nexport { lastly as finally }\n\n// -------------------------------------------------------------------\n\nconst _setFunctionNameAndLength = (() => {\n  const _defineProperties = Object.defineProperties\n\n  try {\n    const f = _defineProperties(function () {}, {\n      length: { value: 2 },\n      name: { value: 'foo' }\n    })\n\n    if (f.length === 2 && f.name === 'foo') {\n      return (fn, name, length) => _defineProperties(fn, {\n        length: {\n          configurable: true,\n          value: length\n        },\n        name: {\n          configurable: true,\n          value: name\n        }\n      })\n    }\n  } catch (_) {}\n\n  return fn => fn\n})()\n\n// Usage: promisify(fn, [ context ])\nexport const promisify = (fn, context) => _setFunctionNameAndLength(function () {\n  const { length } = arguments\n  const args = new Array(length + 1)\n  for (let i = 0; i < length; ++i) {\n    args[i] = arguments[i]\n  }\n\n  return new Promise((resolve, reject) => {\n    args[length] = (error, result) => error\n      ? reject(error)\n      : resolve(result)\n\n    fn.apply(context || this, args)\n  })\n}, fn.name, fn.length && fn.length - 1)\n\nconst _DEFAULT_PALL_MAPPER = name => (\n  !(_endsWith(name, 'Sync') || _endsWith(name, 'Async')) &&\n  name\n)\n\n// Usage: promisifyAll(obj, [ opts ])\nexport const promisifyAll = (obj, {\n  mapper = _DEFAULT_PALL_MAPPER,\n  target = {},\n  context = obj\n} = {}) => {\n  _forIn(obj, (value, name) => {\n    let newName\n    if (\n      typeof value === 'function' &&\n      (newName = mapper(name, value, obj))\n    ) {\n      target[newName] = promisify(value, context)\n    }\n  })\n\n  return target\n}\n\n// -------------------------------------------------------------------\n\nconst FN_FALSE = () => false\nconst FN_TRUE = () => true\n\nconst _reflectResolution = (__proto__ => value => ({\n  __proto__: __proto__,\n  value: () => value\n}))({\n  isFulfilled: FN_TRUE,\n  isPending: FN_FALSE,\n  isRejected: FN_FALSE,\n  isResolved: FN_TRUE,\n  reason: () => {\n    throw new Error('no reason, the promise has resolved')\n  }\n})\n\nconst _reflectRejection = (__proto__ => reason => ({\n  __proto__: __proto__,\n  reason: () => reason\n}))({\n  isFulfilled: FN_FALSE,\n  isPending: FN_FALSE,\n  isRejected: FN_TRUE,\n  isResolved: FN_FALSE,\n  value: () => {\n    throw new Error('no value, the promise has rejected')\n  }\n})\n\n// Returns a promise that is always successful when this promise is\n// settled. Its fulfillment value is an object that implements the\n// PromiseInspection interface and reflects the resolution this\n// promise.\n//\n// Usage: promise::reflect()\nexport function reflect () {\n  return _wrap(this).then(\n    _reflectResolution,\n    _reflectRejection\n  )\n}\n\n// -------------------------------------------------------------------\n\n// Given a collection (array or object) which contains promises,\n// return a promise that is fulfilled when all the items in the\n// collection are either fulfilled or rejected.\n//\n// This promise will be fulfilled with a collection (of the same type,\n// array or object) containing promise inspections.\n//\n// Usage: promises::settle()\nexport function settle () {\n  return this::all(x => x::reflect())\n}\n\n// -------------------------------------------------------------------\n\nconst _some = (promises, count) => new Promise((resolve, reject) => {\n  let values = []\n  let errors = []\n\n  const onFulfillment = value => {\n    if (!values) {\n      return\n    }\n\n    values.push(value)\n    if (--count === 0) {\n      resolve(values)\n      values = errors = null\n    }\n  }\n\n  let acceptableErrors = -count\n  const onRejection = reason => {\n    if (!values) {\n      return\n    }\n\n    errors.push(reason)\n    if (--acceptableErrors === 0) {\n      reject(errors)\n      values = errors = null\n    }\n  }\n\n  _forEach(promises, promise => {\n    ++acceptableErrors\n    _wrap(promise).then(onFulfillment, onRejection)\n  })\n})\n\n// Usage: promises::some(count)\nexport function some (count) {\n  return _wrap(this).then(promises => _some(promises, count))\n}\n\n// -------------------------------------------------------------------\n\nexport function tap (onResolved, onRejected) {\n  const forward = () => this\n\n  return _wrap(this).then(\n    onResolved && (value => _wrap(onResolved(value)).then(forward)),\n    onRejected && (reason => _wrap(onRejected(reason)).then(forward))\n  )\n}\n\n// -------------------------------------------------------------------\n\nexport class TimeoutError extends BaseError {\n  constructor () {\n    super('operation timed out')\n  }\n}\n\n// Usage: promise::timeout(ms, cb)\nexport function timeout (ms, cb) {\n  return new Promise((resolve, reject) => {\n    let handle = setTimeout(() => {\n      handle = null\n\n      if (typeof this.cancel === 'function') {\n        this.cancel()\n      }\n\n      if (cb) {\n        try {\n          resolve(cb())\n        } catch (error) {\n          reject(error)\n        }\n      } else {\n        reject(new TimeoutError())\n      }\n    }, ms)\n\n    _wrap(this).then(\n      value => {\n        handle !== null && clearTimeout(handle)\n        resolve(value)\n      },\n      reason => {\n        handle !== null && clearTimeout(handle)\n        reject(reason)\n      }\n    )\n  })\n}\n\n// -------------------------------------------------------------------\n\nexport const attempt = fn => new Promise(resolve => resolve(fn()))\nexport { attempt as try }\n\n// -------------------------------------------------------------------\n\n// Usage: fn::unpromisify()\nexport function unpromisify () {\n  const fn = this\n  return _setFunctionNameAndLength(function () {\n    const n = arguments.length - 1\n    let cb\n    if (\n      n < 0 ||\n      typeof (cb = arguments[n]) !== 'function'\n    ) {\n      throw new Error('missing callback')\n    }\n\n    const args = new Array(n)\n    for (let i = 0; i < n; ++i) {\n      args[i] = arguments[i]\n    }\n\n    wrapApply(fn, args, this).then(\n      result => cb(null, result),\n      reason => cb(reason)\n    )\n  }, fn.name, fn.length + 1)\n}\n"]}